{
  "version": 3,
  "sources": ["../src/extension.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/semi */\r\nimport * as vscode from \"vscode\"\r\nimport * as fs from \"fs\"\r\nimport callAPI from \"./callAPI\"\r\nimport type {Uri} from \"vscode\"\r\nimport { InfoViewProvider } from \"./modules/InfoViewProvider\"\r\nimport { getFile } from \"./modules/getExternalHtml\";\r\n\r\n// This method is called when your extension is activated\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  console.log(\r\n    'Congratulations, your extension \"discover-vscode-api\" is now active!'\r\n  )\r\n  howToShowInformationMessage()\r\n\r\n  // The command has been defined in the package.json file\r\n  // Now provide the implementation of the command with registerCommand\r\n  // The commandId parameter must match the command field in package.json\r\n  let disposableHelloWorld = vscode.commands.registerCommand(\r\n    \"discover-vscode-api.helloWorld\",\r\n    () => {\r\n      // The code you place here will be executed every time your command is executed\r\n\r\n      // howToShowInformationMessage()\r\n      // howToGetCurrentWorkspaceFolder()\r\n      // howToOpenProblemsPane()\r\n      // howToCreateFileInCurrentWorkspaceFolder()\r\n      // callAPI()\r\n      howToGetCurrentDiagnostics()\r\n      // getFile()\r\n    }\r\n  )\r\n\r\n  context.subscriptions.push(disposableHelloWorld)\r\n  context.subscriptions.push(disposableRunActionOnFileSave)\r\n\r\n  /* const viewProvider = new InfoViewProvider(context.extensionUri)\r\n\r\n  context.subscriptions.push(\r\n    vscode.window.registerWebviewViewProvider(\r\n      InfoViewProvider.viewType,\r\n      viewProvider\r\n    )\r\n  ) */\r\n}\r\n\r\nconst howToShowInformationMessage = () => {\r\n  vscode.window.showInformationMessage(\"Hello World from discover-vscode-api!\")\r\n}\r\n\r\nconst howToGetCurrentWorkspaceFolder = () => {\r\n  const currentWorkSpaceFolder = vscode.workspace.workspaceFolders?.[0].uri\r\n  console.log(\r\n    `How to get the current workspace folder: ${currentWorkSpaceFolder}`\r\n  )\r\n}\r\n\r\nconst howToOpenProblemsPane = () => {\r\n  vscode.commands.executeCommand(\"workbench.action.problems.focus\")\r\n}\r\n\r\nconst howToCreateFileInCurrentWorkspaceFolder = () => {\r\n  const workspacePath = vscode.workspace.workspaceFolders?.[0]?.name\r\n\r\n  fs.writeFileSync(\r\n    `${workspacePath}/test.txt`,\r\n    \"Hello World from discover-vscode-api!\"\r\n  )\r\n  fs.writeFileSync(`${workspacePath}/test.txt`, \"What the f..\")\r\n}\r\n\r\nconst howToGetCurrentDocumentURI = () => {\r\n  const currentDocumentURI: Uri = vscode.window.activeTextEditor?.document\r\n    .uri as Uri\r\n  console.log(\r\n    \"\uD83D\uDE80 ~ file: extension.ts:63 ~ currentDocumentURI:\",\r\n    currentDocumentURI\r\n  )\r\n  return currentDocumentURI\r\n}\r\n\r\nconst howToGetCurrentDiagnostics = () => {\r\n  /* \r\n      vscode.languages.getDiagnostics() , a\u00E7\u0131k olan t\u00FCm dosyalardaki hatalar\u0131 al\u0131yor\r\n  \r\n  */\r\n  const currentDocumentURI: Uri = howToGetCurrentDocumentURI()\r\n  const currentDiagnostics = vscode.languages.getDiagnostics(currentDocumentURI)\r\n  console.log(\r\n    \"\uD83D\uDE80 ~ file: extension.ts:63 ~ currentDiagnostics:\",\r\n    currentDiagnostics\r\n  )\r\n  return currentDiagnostics\r\n}\r\n\r\nconst howToGetCurrentDocumentLanguageCode = () => {\r\n  return vscode.window.activeTextEditor?.document?.languageId\r\n}\r\n\r\nconst howToCheckSettings = () => {\r\n  /* \r\n    python da problems k\u0131sm\u0131nda \u00E7\u0131kan mesajlar pylance taraf\u0131ndan veriliyor. E\u011Fer \"python.languageServer\" -> \"Default\" veya \"Pylance\" de\u011Filse vermiyor\r\n  \r\n  */\r\n  const settings = vscode.workspace.getConfiguration().get(\"python\")\r\n  return settings\r\n}\r\n\r\nconst disposableRunActionOnFileSave = vscode.commands.registerCommand(\r\n  \"workbench.action.files.save\",\r\n  () => {\r\n    console.log(\"File Saved!\")\r\n    const pylanceSettings = howToCheckSettings()\r\n    console.log(\r\n      \"\uD83D\uDE80 ~ file: extension.ts:107 ~ pylanceSettings:\",\r\n      pylanceSettings\r\n    )\r\n  }\r\n)\r\n\r\n\r\n// This method is called when your extension is deactivated\r\nexport function deactivate() {}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,aAAwB;AAQjB,SAAS,SAAS,SAAkC;AACzD,UAAQ;AAAA,IACN;AAAA,EACF;AACA,8BAA4B;AAK5B,MAAI,uBAA8B,gBAAS;AAAA,IACzC;AAAA,IACA,MAAM;AAQJ,iCAA2B;AAAA,IAE7B;AAAA,EACF;AAEA,UAAQ,cAAc,KAAK,oBAAoB;AAC/C,UAAQ,cAAc,KAAK,6BAA6B;AAU1D;AAEA,IAAM,8BAA8B,MAAM;AACxC,EAAO,cAAO,uBAAuB,uCAAuC;AAC9E;AAuBA,IAAM,6BAA6B,MAAM;AACvC,QAAM,qBAAiC,cAAO,kBAAkB,SAC7D;AACH,UAAQ;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AAEA,IAAM,6BAA6B,MAAM;AAKvC,QAAM,qBAA0B,2BAA2B;AAC3D,QAAM,qBAA4B,iBAAU,eAAe,kBAAkB;AAC7E,UAAQ;AAAA,IACN;AAAA,IACA;AAAA,EACF;AACA,SAAO;AACT;AAMA,IAAM,qBAAqB,MAAM;AAK/B,QAAM,WAAkB,iBAAU,iBAAiB,EAAE,IAAI,QAAQ;AACjE,SAAO;AACT;AAEA,IAAM,gCAAuC,gBAAS;AAAA,EACpD;AAAA,EACA,MAAM;AACJ,YAAQ,IAAI,aAAa;AACzB,UAAM,kBAAkB,mBAAmB;AAC3C,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AAIO,SAAS,aAAa;AAAC;",
  "names": []
}
